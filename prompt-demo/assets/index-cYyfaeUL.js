(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))n(e);new MutationObserver(e=>{for(const o of e)if(o.type==="childList")for(const a of o.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&n(a)}).observe(document,{childList:!0,subtree:!0});function s(e){const o={};return e.integrity&&(o.integrity=e.integrity),e.referrerPolicy&&(o.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?o.credentials="include":e.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function n(e){if(e.ep)return;e.ep=!0;const o=s(e);fetch(e.href,o)}})();function r(...i){const t=document.querySelector("#logs");t&&(t.innerHTML+=`${i.join(" ")}<br>`),console.log(...i)}class l{constructor(){if(this.logElement=document.querySelector("#logs"),this.languageModel=null,this.session=null,this.apiName="LanguageModel",!("LanguageModel"in self)){r("Prompt (LanguageModel) API is not supported in this browser.");return}r("Prompt (LanguageModel) API is available.")}async init(t={}){if(!("LanguageModel"in self))throw new Error("LanguageModel API is not supported in this browser.");r(`Model capabilities are ${await LanguageModel.params()}`);const s=await LanguageModel.availability();if(s==="unavailable"){r("LanguageModel API is not available.");return}s==="available"?r("LanguageModel API is available."):(r("Downloading language model."),t.monitor=e=>{e.addEventListener("downloadprogress",o=>{r(`Downloading ${o.loaded*100}%`)})},this.languageModel=await LanguageModel.create(t));const n=await LanguageModel.create({initialPrompts:[{role:"system",content:"You are an expert at telling stories. Write a story based on the topic provided by the user. Each story must be different from the previous ones. Just tell a story and don't ask the user for more information"}],expectedInputs:[{type:"text"}]});this.session=n}async prompt(t,s=!1){if(!this.session)throw new Error("LanguageModel is not initialized. Call init() first.");const n=[{role:"user",content:`Tell me a story about this topic: ${t}.`}];return s?this.session.promptStreaming(n):this.session.prompt(n)}}const u=document.querySelector("#submit");u.addEventListener("click",async()=>{const i=new l,t=document.querySelector("#result");t.innerHTML="Loading...",await i.init();const s=document.querySelector("#topic").value,n=document.querySelector("#streaming").checked;try{r("Starting prompt");const e=await i.prompt(s,n);if(t.innerHTML="",e instanceof ReadableStream)for await(const o of e)t.append(o);else t.value=e;console.log(e),r("Prompt completed successfully.")}catch(e){console.error("Error during prompt:",e),r(`Error: ${e.message}`);return}});
